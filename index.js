import{S as y,a as v,i as n}from"./assets/vendor-DDdXnYQq.js";(function(){const r=document.createElement("link").relList;if(r&&r.supports&&r.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))a(e);new MutationObserver(e=>{for(const t of e)if(t.type==="childList")for(const i of t.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&a(i)}).observe(document,{childList:!0,subtree:!0});function s(e){const t={};return e.integrity&&(t.integrity=e.integrity),e.referrerPolicy&&(t.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?t.credentials="include":e.crossOrigin==="anonymous"?t.credentials="omit":t.credentials="same-origin",t}function a(e){if(e.ep)return;e.ep=!0;const t=s(e);fetch(e.href,t)}})();let L=new y(".gallery a");function c(o){const r=document.querySelector(".gallery"),s=o.map(a=>{const{webformatURL:e,largeImageURL:t,tags:i,likes:f,views:p,comments:h,downloads:g}=a;return`<li class="img-li">
        <a href="${t}">
        <img src="${e}" alt="${i}" class="img">
        <div class="all-stats">
        <div class="stats"><p class="stats-name">Likes</p><p class="stats-value">${f}</p></div>
        <div class="stats"><p class="stats-name">Views</p><p class="stats-value">${p}</p></div>
        <div class="stats"><p class="stats-name">Comments</p><p class="stats-value">${h}</p></div>
        <div class="stats"><p class="stats-name">Downloads</p><p class="stats-value">${g}</p></div>
        </div>
        </a>
        </li>`}).join("");r.insertAdjacentHTML("beforeend",s),L.refresh()}function w(){document.querySelector(".gallery").innerHTML=""}function d(){document.querySelector(".loader").classList.remove("visually-hidden")}function u(){document.querySelector(".loader").classList.add("visually-hidden")}function S(){document.querySelector(".load-more").classList.remove("visually-hidden")}function b(){document.querySelector(".load-more").classList.add("visually-hidden")}async function m(o,r=1){try{const s=await v.get("https://pixabay.com/api/",{params:{key:"51402348-a0c5f352e8dacc54a34bc803e",q:o,image_type:"photo",orientation:"horizontal",safesearch:!0,per_page:15,page:r}});return s.data.hits.length===0&&n.show({message:"Sorry, there are no images matching your search query. Please try again!",messageColor:"#fff",backgroundColor:"#EF4040",position:"topRight"}),s.data.hits}catch(s){throw s}}const q=document.querySelector(".form");let l;q.addEventListener("submit",o=>{if(o.preventDefault(),b(),l=o.currentTarget.elements["search-text"].value.trim(),!l){n.show({message:"Please fill in the field",messageColor:"#fff",backgroundColor:"#EF4040",position:"topRight"});return}d(),w(),m(l).then(r=>{let s=1;return r.length>=15&&S(),document.querySelector(".load-more").addEventListener("click",a=>{a.preventDefault(),d(),s+=1,m(l,s).then(e=>{u(),c(e);const t=document.querySelector(".img-li").getBoundingClientRect().height*2;window.scrollBy({top:t,behavior:"smooth"})})}),s=1,c(r)}).catch(r=>{n.show({message:"Error happened",messageColor:"#fff",backgroundColor:"#EF4040",position:"topRight"})}).finally(()=>{u()})});
//# sourceMappingURL=index.js.map
